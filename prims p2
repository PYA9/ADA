#include<stdio.h>
#define INFI 99

int edges[10][3], wt[10][10], n;

void prims() {
    int u[10], lowcost[10], visited[10] = {0}, mincost = 0, i, j, v;
    
    visited[1] = 1;  // Start with the first vertex
    for (i = 2; i <= n; i++) {
        u[i] = 1;
        lowcost[i] = wt[1][i];
    }
    
    for (i = 1; i < n; i++) {
        min = INFI;
        for (j = 2; j <= n; j++) {
            if (!visited[j] && lowcost[j] < min) {
                min = lowcost[j];
                v = j;
            }
        }
        
        edges[i][1] = u[v];
        edges[i][2] = v;
        mincost += lowcost[v];
        visited[v] = 1;
        for (j = 2; j <= n; j++) {
            if (!visited[j] && wt[v][j] < lowcost[j]) {
                lowcost[j] = wt[v][j];
                u[j] = v;
            }
        }
    }
    
    printf("\nEdges of Minimum Cost Spanning Tree:\n");
    for (i = 1; i < n; i++) 
        printf(" (%d, %d)\n", edges[i][1], edges[i][2]);
    printf("Minimum Cost = %d\n", mincost);
}

int main() {
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter cost matrix:\n");
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            scanf("%d", &wt[i][j]);
    prims();
    return 0;
}
